# TensorFlow and tf.keras
import tensorflow as tf

# Helper libraries
import numpy as np
import matplotlib.pyplot as plt

print(tf.__version__)
fashion_mnist = tf.keras.datasets.fashion_mnist

(train_images,train_labels),		(test_images,test_labels)= fashion_mnist.load_data()
train_images = train_images / 255.0

test_images = test_images / 255.0
model = tf.keras.Sequential([
    tf.keras.layers.Flatten(input_shape=(28, 28)),
    #tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dense(256, activation='relu'),
    tf.keras.layers.Dense(128, activation='tanh'),
    tf.keras.layers.Dense(10)
])

onehot_train_labels = tf.keras.utils.to_categorical(train_labels)
onehot_test_labels = tf.keras.utils.to_categorical(test_labels)

opt = tf.keras.optimizers.SGD(
learning_rate=0.01, momentum=0.25, nesterov=False, name="SGD") 
model.compile(optimizer=opt, 
loss=tf.keras.losses.CategoricalCrossentropy(from_logits=True), 
              metrics=['accuracy'])

#model.compile(optimizer='adam',
#    loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),
#              metrics=['accuracy'])
model.fit(train_images, onehot_train_labels, epochs=30)
test_loss, test_acc = model.evaluate(test_images,  onehot_test_labels, verbose=2)

print('\nTest accuracy:', test_acc)
