# import
import numpy as np
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers

mnist = keras.datasets.mnist

(x_train, y_train), (x_test, y_test) = mnist.load_data()
x_train, x_test = x_train / 255.0, x_test / 255.0

xmodel = Sequential()
xmodel.add(tf.keras.layers.SimpleRNN(128, input_shape = (28,28),
                                    return_sequences=True)),
xmodel.add(tf.keras.layers.SimpleRNN(256,
                                    return_sequences=True)),
xmodel.add(tf.keras.layers.SimpleRNN(128)),
xmodel.add(tf.keras.layers.Dense(10))
xmodel.build()
xmodel.summary()

xmodel.compile(optimizer='adam',
              loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),
              metrics=['accuracy'])

xmodel.fit(x_train, y_train, epochs=5)

test_loss, test_acc = xmodel.evaluate(x_test,  y_test, verbose = 0)

print('\nTest accuracy:', test_acc)
print('\nTest loss:', test_loss)