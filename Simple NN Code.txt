# TensorFlow and tf.keras
import tensorflow as tf

# Helper libraries
import numpy as np
import matplotlib.pyplot as plt

fashion_mnist = tf.keras.datasets.fashion_mnist
(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()

train_images = train_images / 255.0
test_images = test_images / 255.0

# Initializing the model
model = tf.keras.Sequential([
    # Use the Flatten function to make the correct dimensions
    # for the input layer.
    tf.keras.layers.Flatten(input_shape=(28, 28)), 
    # Making one hidden layer
    tf.keras.layers.Dense(128, activation='relu'),
    # Making the output layer
    tf.keras.layers.Dense(10)
])

# Compiling the model 
model.compile(optimizer='adam', # Choosing 'adam' optimization function
              #Choosing the SparseCategoricalCrossentropy function
              loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),
              metrics=['accuracy'])

# Fitting the model to the data
model.fit(train_images, train_labels, epochs=10)

test_loss, test_acc = model.evaluate(test_images,  test_labels, verbose=2)
print('\nTest accuracy:', test_acc)